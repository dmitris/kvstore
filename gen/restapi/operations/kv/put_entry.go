// Code generated by go-swagger; DO NOT EDIT.

package kv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PutEntryHandlerFunc turns a function with the right signature into a put entry handler
type PutEntryHandlerFunc func(PutEntryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutEntryHandlerFunc) Handle(params PutEntryParams) middleware.Responder {
	return fn(params)
}

// PutEntryHandler interface for that can handle valid put entry params
type PutEntryHandler interface {
	Handle(PutEntryParams) middleware.Responder
}

// NewPutEntry creates a new http.Handler for the put entry operation
func NewPutEntry(ctx *middleware.Context, handler PutEntryHandler) *PutEntry {
	return &PutEntry{Context: ctx, Handler: handler}
}

/*PutEntry swagger:route PUT /kv/{key} kv putEntry

PutEntry put entry API

*/
type PutEntry struct {
	Context *middleware.Context
	Handler PutEntryHandler
}

func (o *PutEntry) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutEntryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
